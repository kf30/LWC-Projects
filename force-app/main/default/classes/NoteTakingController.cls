public without sharing class NoteTakingController {
    @AuraEnabled
    public static boolean createNoteRecord(String title, String description){
        try{
            if(!String.isBlank(title)){
                My_Note__c newNote = new My_Note__c(Name=title, Note_Description__c=description);
                insert newNote;
                return true;
            }
            return false;
        }catch(Exception e){
            throw new AuraHandledException(e.getMessage());
        }
    }
    @AuraEnabled(Cacheable=true)
    public static List<My_Note__c> getNotes(){
        return [Select Id, Name, Note_Description__c, LastModifiedDate From My_Note__c order by LastModifiedDate desc];
    }

    @AuraEnabled
    public static boolean updateNoteRecord(String noteId, String title, String description){
        try {
            if(!String.isBlank(noteId)){
                My_Note__c note = [Select Id, Name, Note_Description__c From My_Note__c Where Id =: noteId];
                note.Name = title;
                note.Note_Description__c = description;
                update note;
                return true;
            }
            return false;
        } catch (Exception e) {
            throw new AuraHandledException(e.getMessage());
        }
    }

    @AuraEnabled
    public static Boolean deleteNoteRecord(String noteId){
        try {
            if(!String.isBlank(noteId)){
                My_Note__c note = new My_Note__c(Id=noteId);
                delete note;
                return true;
            }
            return false;
        } catch (Exception e) {
            throw new AuraHandledException(e.getMessage());
        }
    }
}